"Drag this to the Pharo image to initialize demo mode and open a workspace of code snippets.""NB -- this file uses class Mac OS linefeeds.""--------------------------------------------------------------------------------"GTPlayground openContents: '| anonClass set point logger |"Hello World with reflection"Object subclass: #HelloWorld  instanceVariableNames: ''''  classVariableNames: ''''  category: ''HelloWorld''.(Smalltalk at: #HelloWorld) compile: ''hello ^ ''''hello''''''.((Smalltalk at: #HelloWorld) perform: #new) perform: #hello."Hello World without reflection"HelloWorld new hello."Code metrics"Collection allSuperclasses size.Collection allSelectors size.Collection allInstVarNames size.Collection selectors size.Collection instVarNames size.Collection subclasses size.Collection allSubclasses size.Collection linesOfCode."SystemNavigation"SystemNavigation default browseAllImplementorsOf: #,."Find all super-sends in Collection hierarchy"((Collection withAllSubclasses flatCollect: #methodDict) select: #sendsToSuper) inspect."Finding super-sends to other methods"((CompiledMethod allInstances select: #sendsToSuper)  select: [ :m |     (m sendNodes select:      [ :send | send isSuperSend and: [ m selector ~= send selector ] ])    isNotEmpty ]) inspect."Accessing the stack"thisContext inspect. self halt."Evaluate the above line, and then in the Inspector run: self stack inspect""Halt demo"HaltDemo new foo. "does not halt"HaltDemo new bar. "triggers debugger""Minimal objects"point := 1@2.LoggingProxy for: point.point."inspect to see that the point has been replace by a proxy.""Anonymous classes"Transcript open.anonClass := Class new.anonClass	superclass: Set;	setFormat: Set format.anonClass	compile:		''add: anObject		Transcript show: ''''adding '''', anObject printString; cr.		^ super add: anObject''.set := Set new.set add: 1.set primitiveChangeClassTo: anonClass basicNew.set add: 2."Method wrappers"logger := LoggingMethodWrapper on: Integer>>#factorial.logger invocationCount.5 factorial.logger invocationCount.logger install.[ 5 factorial ] ensure: [logger uninstall].logger invocationCount.10 factorial.logger invocationCount.' label: 'Reflection demo'."--------------------------------------------------------------------------------"